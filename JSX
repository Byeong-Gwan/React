// A syntax extension to JavaScript
// JavaScript 문법 확장

// JavaScript + XML / HTML

// JSX 사용 코드
const element = <h1>Hello, world!</h1>

class Hello extends React.Component {
  render() {
    return <div>Hello {this.props.toWhat}</div>;
  }
}

ReactDOM.render(
  <Hello toWhat="World" />,
  document.getElementById('root')
);

// 순수 JavaScrip 코드
class Hello extends React.Component {
  render() {
    return React.createElement('div', null, `Hello ${this.props.toWhat}`);
  }
}

ReactDOM.render(
  React.createElement(Hello, { toWhat: 'World' }, null),
  document.getElementById('root')
);


// JSX를 사용한 코드
const element2 = (
  <h1 h1 className = "greeting" >
    Hello, World!
  </h1>
)

// JSX를 사용하지 않은 코드
const element2_1 = React.createElement(
  'h1',
  { className: 'greeting' },
  'Hello, World!'
)

// React에서 JSX를 쓰는 것이 필수는 아님
// 단, JSX를 사용하면 장점들이 많기 때문에 편리함
// 코드의 간결성, 가독성, 재사용성, Injection Attacks 방어 등 사용 권장

// 코드의 간결화
// JSX 사용
{/* <div>Hello, {name}</div> 이렇게 사용*/ }

// JSX 미사용
// React.createElement('div', null, `Hello, ${name}`);

