1. Composition(구성이라는 뜻보다는'합성'이라는 뜻에 가까움)
  - 리액트에서 Composition은 여러 개의 컴포넌트를 합쳐서 새로운 컴포넌트를 만드는 것
  - Composition은 React에서 많이 사용된다 그렇기 때문에
    '여러 개의 컴포넌트들을 어떻게 조합할 것인가?' 에 대한 고민을 많이 해야 된다.

  (1) Containment (방지, 변제 여기서는 Contin의 의미로 사용된다 담다, 포함하다라는 의미로 사용)
    - 하위 컴포넌트를 포함하는 형태의 합성 방법
    - Sidebar나 Dialog 같은 Box 형태의 컴포넌트는 자신의 하위 컴포넌트를 미리 알 수 없다.
    - children이라는 prop를 사용해서 조합
    - 여러 개의 children 집합이 필요한 경우는 어떻게 할까?

  (2) Specialization (전문화, 특수화)
    - 범용적인 개념을 구별이 되게 구체화 하는 것
    - 기존의 객체지향 언어에서는 상속(Inheritance)을 사용하여 Specialization을 구현
      하지만, 리액트에서는 합성(Composition)을 사용하여 Specialization을 구현한다.

  (3) Containment와 Specialization을 같이 사용하기
    * img 참조

  (4) Inheritance (상속) (사용 X)
    - 리액트는 다른 컴포넌트로부터 상속을 받아서 새로운 컴포넌트를 만드는 것

** 복잡한 컴포넌트를 쪼개서 여러 개의 컴포넌트로 만들고, 만든 컴포넌트들을 조합해서 새로운 컴포넌트를 만들자! **
